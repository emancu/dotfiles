### Functions for shell ###

__setup_directory(){
  [ -e .setup ] && source ./.setup
};

if [ ${ZSH_VERSION} ]; then
  alias __set_git_ps1='echo "%F{red}[`__git_branch`]%F{cyan}@%1~\$%f "'
  alias __set_normal_ps1='echo "%F{cyan}%n@eprof:%1~\$%f "'
elif [ ${BASH_VERSION} ]; then
  alias __set_git_ps1='export PS1="\[$(tput setaf 1)\][$(__git_branch)]\[$(tput setaf 6)\]@\W\$ \[$(tput sgr0)\]"'
  alias __set_normal_ps1='PS1="\[$(tput setaf 6)\]\u@\h:\W\$ \[$(tput sgr0)\]"'
fi

__git_stash_show(){
  git stash show stash@{$1} -p
};

__git_branch(){
  echo "$(git branch --show-current 2> /dev/null)"
};

__git_track_branch(){
  local branch=`__git_branch`
  if [ -n "$branch" ]; then
    `git config branch.$branch.remote origin`
    `git config branch.$branch.merge refs/heads/$branch`
    `git config branch.$branch.rebase true`
  fi
};

__git_list_stale_branches(){
  git branch -vv | grep 'origin/.*: gone]' | awk '{print $1}'
};

__select_ps1(){
  [ -n "`__git_branch`" ] && __set_git_ps1 || __set_normal_ps1
};

# Search files like `git grep`.
# ARG1: file pattern (append '*' to work as grep)
# ARG2..N: directories to look up
#
# https://www.gnu.org/savannah-checkouts/gnu/bash/manual/bash.html#Shell-Parameter-Expansion
ff(){
  arg1=${1:+$1"*"}
  arg2=${2:-"./"}
  set -- "${arg1}" "${arg2}" "${@:3}"

  find $@[2,-1] -iname $1
};

# This one performs an exact match
ffe(){
  arg2=${2:-"./"}
  set -- "$1" "${arg2}" "${@:3}"

  find $@[2,-1] -iname $1
};
